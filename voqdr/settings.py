"""
Django settings for project voqdr.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import environ



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Reading enviroment variables
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
env = environ.Env(
    DEBUG=(bool, True),
    EMAIL_PORT=(int),
    EMAIL_USE_TLS=(bool, True),
    PROJECT_MODE=(bool, False)
)

MEDIA_BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['*','www.voqdr.com','https://www.voqdr.com/','https://voqdr.com', 'https://voqdr.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # local apps

    'web',
    'users',
    'authentications',
    'ckeditor',
    'django_toggle_switch_widget',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'voqdr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'voqdr.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


PROJECT_MODE = env('PROJECT_MODE')


if PROJECT_MODE:
    # For Development Server
    DATABASES = {
        'default': {
            "ENGINE": env('PRODUCTION_DATABASE_ENGINE'),
            "NAME": env('PRODUCTION_DATABASE_NAME'),
            "USER": env('PRODUCTION_DATABASE_USER'),
            "PASSWORD": env('PRODUCTION_DATABASE_PASSWORD'),
            "HOST": env('PRODUCTION_DATABASE_HOST'),
            "PORT": env('PRODUCTION_DATABASE_PORT')
        }
    }
    BASE_URL = env('PRODUCTION_BASE_URL')
else:
    # For local machine
    DATABASES = {
        'default': {
            "ENGINE": env('LOCAL_DATABASE_ENGINE'),
            "NAME": env('LOCAL_DATABASE_NAME'),
            "USER": env('LOCAL_DATABASE_USER'),
            "PASSWORD": env('LOCAL_DATABASE_PASSWORD'),
            "HOST": env('LOCAL_DATABASE_HOST'),
            "PORT": env('LOCAL_DATABASE_PORT')
        }
    }
    BASE_URL = env('LOCAL_BASE_URL')   


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# STATIC_URL = 'static/'
# STATIC_ROOT = "/static/"

# STATICFILES_DIRS = [
#   os.path.join(BASE_DIR, "web/static/")
# ]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(MEDIA_BASE_DIR,'media')

AUTH_USER_MODEL = 'users.User'

# Server static folder root
root = Path(__file__).resolve().parent

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / "static"
]
STATIC_ROOT = os.path.join(str(root), "static")

# STATIC_ROOT = os.path.join(str(BASE_DIR), "/static")


LOGO = 'http://dev.crymzee.com:7000/static/web/Assets/Images/logo.png'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_USE_TLS = env('EMAIL_USE_TLS')
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env('EMAIL_PORT')

EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
LIVE_EMAIL = env('LIVE_EMAIL')

# EMAIL_HOST_USER = 'khanvoqdr@gmail.com'
# EMAIL_HOST_PASSWORD = 'pkqqmydqzkthrlre'

PROJECT_NAME = env('PROJECT_NAME')
AUTH_TOKEN = env('AUTH_TOKEN')
STRIPE_SECRET_KEY = env('STRIPE_SECRET_KEY')
STRIPE_PUBLIC_KEY = env('STRIPE_PUBLIC_KEY')
STRIPE_ENDPOINT_SECRET = env('STRIPE_ENDPOINT_SECRET')
PRICE_ID = env('PRICE_ID')